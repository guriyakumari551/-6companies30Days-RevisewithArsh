// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    int doOverlap(int L1[], int R1[], int L2[], int R2[])
    {
      
      //time  complexcity of the solution is o(1)
      //space complexcity of the solution is o(1)
      //since we have to find the overlapping interval
      //intution of the question is if we find the x cordinate of first rectangle is less than the x cordinate of the second rectangle and vice versa
      //if the y cordinate of first rectangle is less than the y cordinate of second rectangle  and vice versa 
      //this is the way to find that two rectangle is nonoverlapping
      //check along the x cordinate length
      if(L1[0]>R2[0]||L2[0]>R1[0])
      return false;
      //check along the y cordinate length
      if(L1[1]<R2[1]||L2[1]<R1[1])
      return false;
      return true;
      
    }
};

// { Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int p[2], q[2], r[2], s[2];
        cin >> p[0] >> p[1] >> q[0] >> q[1] >> r[0] >> r[1] >> s[0] >> s[1];
        Solution ob;
        int ans = ob.doOverlap(p, q, r, s);
        cout << ans << "\n";
    }
}  // } Driver Code Ends