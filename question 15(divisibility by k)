
class Solution {
  public:
    bool canPair(vector<int> nums, int k)
    
    {
        int n=nums.size();
        unordered_map<int,int>mp;
        for(auto it:nums)
        mp[it%k]++;
        for(int i=0;i<n;i++)
        {
          int x=nums[i]%k;
          int y=mp[x];
         if(x==0)
         {
             if(y&1)
             return false;
         }
         else if(2*x==k)
         {
             if((y&1))
             return false;
         }
         else if(mp.find(k-x)==mp.end())
         return false;
          else if(mp[x]!=mp[k-x])
          return false;
          
            }
        
        return true;
        
    }
};

// { Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int n, k;
        cin >> n >> k;
        vector<int> nums(n);
        for (int i = 0; i < nums.size(); i++) cin >> nums[i];
        Solution ob;
        bool ans = ob.canPair(nums, k);
        if (ans)
            cout << "True\n";
        else
            cout << "False\n";
    }
    return 0;
}  // } Driver Code Endsg